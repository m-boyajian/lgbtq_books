"""Dropped Books & saved books association table.

Revision ID: 3fcea2efcd0e
Revises: 078707ecf70a
Create Date: 2023-12-02 18:49:40.915168

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '3fcea2efcd0e'
down_revision = '078707ecf70a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('saved_books', schema=None) as batch_op:
        batch_op.add_column(sa.Column('book_title', sa.Text(), nullable=False))
        batch_op.drop_constraint('saved_books_book_id_fkey', type_='foreignkey')
        batch_op.drop_column('cover_url')
        batch_op.drop_column('date_saved')
        batch_op.drop_column('book_id')

    op.drop_table('saved_books_association')
    op.drop_table('saved_books')
    op.drop_table('books')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('books',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('books_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('title', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('cover_url', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('author', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('publisher', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='books_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('saved_books_association',
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('book_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('date_saved', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('cover_url', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], name='saved_books_association_book_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='saved_books_association_user_id_fkey')
    )

    with op.batch_alter_table('saved_books', schema=None) as batch_op:
        batch_op.add_column(sa.Column('book_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('date_saved', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('cover_url', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.create_foreign_key('saved_books_book_id_fkey', 'books', ['book_id'], ['id'])
        batch_op.drop_column('book_title')

    # ### end Alembic commands ###
